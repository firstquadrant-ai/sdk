/*
FirstQuadrant API

The FirstQuadrant API is used to interact with FirstQuadrant programmatically. We also have SDKs available (coming soon).

API version: 0.0.0
Contact: inquiry@firstquadrant.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MarkConversationAsWonBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MarkConversationAsWonBody{}

// MarkConversationAsWonBody struct for MarkConversationAsWonBody
type MarkConversationAsWonBody struct {
	Email interface{} `json:"email"`
	IdempotencyKey interface{} `json:"idempotencyKey"`
}

// NewMarkConversationAsWonBody instantiates a new MarkConversationAsWonBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarkConversationAsWonBody(email interface{}, idempotencyKey interface{}) *MarkConversationAsWonBody {
	this := MarkConversationAsWonBody{}
	this.Email = email
	this.IdempotencyKey = idempotencyKey
	return &this
}

// NewMarkConversationAsWonBodyWithDefaults instantiates a new MarkConversationAsWonBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarkConversationAsWonBodyWithDefaults() *MarkConversationAsWonBody {
	this := MarkConversationAsWonBody{}
	return &this
}

// GetEmail returns the Email field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *MarkConversationAsWonBody) GetEmail() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MarkConversationAsWonBody) GetEmailOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *MarkConversationAsWonBody) SetEmail(v interface{}) {
	o.Email = v
}

// GetIdempotencyKey returns the IdempotencyKey field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *MarkConversationAsWonBody) GetIdempotencyKey() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.IdempotencyKey
}

// GetIdempotencyKeyOk returns a tuple with the IdempotencyKey field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MarkConversationAsWonBody) GetIdempotencyKeyOk() (*interface{}, bool) {
	if o == nil || IsNil(o.IdempotencyKey) {
		return nil, false
	}
	return &o.IdempotencyKey, true
}

// SetIdempotencyKey sets field value
func (o *MarkConversationAsWonBody) SetIdempotencyKey(v interface{}) {
	o.IdempotencyKey = v
}

func (o MarkConversationAsWonBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MarkConversationAsWonBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.IdempotencyKey != nil {
		toSerialize["idempotencyKey"] = o.IdempotencyKey
	}
	return toSerialize, nil
}

type NullableMarkConversationAsWonBody struct {
	value *MarkConversationAsWonBody
	isSet bool
}

func (v NullableMarkConversationAsWonBody) Get() *MarkConversationAsWonBody {
	return v.value
}

func (v *NullableMarkConversationAsWonBody) Set(val *MarkConversationAsWonBody) {
	v.value = val
	v.isSet = true
}

func (v NullableMarkConversationAsWonBody) IsSet() bool {
	return v.isSet
}

func (v *NullableMarkConversationAsWonBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarkConversationAsWonBody(val *MarkConversationAsWonBody) *NullableMarkConversationAsWonBody {
	return &NullableMarkConversationAsWonBody{value: val, isSet: true}
}

func (v NullableMarkConversationAsWonBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarkConversationAsWonBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


